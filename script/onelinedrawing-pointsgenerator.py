# np
import numpy as np
# svg.path
from svg.path import Path, Line, Arc, CubicBezier, QuadraticBezier
from svg.path import parse_path
# xml
from xml.dom import minidom
# plt
import matplotlib.pyplot as plt

print "Reading SVG file..."
doc = minidom.parse("../data/svgs/night_festival.svg")  # Change the file name
path_strings = [path.getAttribute('d') for path
                in doc.getElementsByTagName('path')]
doc.unlink()
#camel = parse_path("m 102.65413,134.19235 c 0,0 -23.45557,62.30713 0.64356,37.06833 5.01726,-5.25453 -2.76758,-11.33484 -2.76758,-11.33484 l -13.413537,-3.9833 -43.62374,21.81187 -13.08712,21.81187 5.23485,9.59722 12.21464,0.87247 41.878786,-7.85227 17.449501,3.4899 8.72474,21.81187 -22.684341,63.69066 -5.23485,41.00631 14.832071,41.00631 18.32197,13.08712 24.4293,4.36238 40.13383,-22.68435 39.26137,-75.9053 21.81187,-38.38889 28.79166,-22.68434 30.53662,-5.23485 19.19444,23.55682 11.34218,3.4899 29.66414,-13.9596 47.11363,9.59722 30.53662,40.13384 4.36237,28.79167 28.79167,53.22096 11.34217,38.38889 0,48.85858 0,38.38889 12.21465,25.30177 15.70455,13.9596 -6.9798,46.24116 -18.32197,65.43561 -5.23485,6.97979 -40.13384,1.74495 -5.23485,-6.10732 7.85227,-12.21465 34.89899,-21.81187 5.23485,-43.62373 -8.72474,-29.66414 -41.00632,-69.79798 -27.91919,-63.69066 -27.04672,-36.64394 -21.81187,-10.4697 -79.3952,8.72475 -68.9255,32.28157 -6.9798,31.40909 17.44949,22.68434 21.81187,0.87247 21.81187,-14.83207 8.72475,-47.11363 -16.57702,-31.40909 -21.81187,-4.36238 -19.19445,11.34217 -24.42929,34.89899 -3.4899,46.24117 17.4495,126.50883 2.61742,33.15405")
#dancer = parse_path("m -110.99985,216.11435 c 0,0 1.334,-4.667 11.000002,-10 0,0 3,-4.666 -0.667002,-11.333 0,0 -2.68,-6.287 2.999002,-4.333 0,0 0.955,-3.896 3.455,-1.396 0,0 -0.129,-4.445 2.371,-3.695 l 0.14,-6.554 c 0,0 4.534,2.896 9.534,2.646 0,0 15.75,-2.75 14,11.5 0,0 -1.013,8.237 -12.5,11 0,0 -11.383,12.088 -0.715,9.997 0,0 24.715,-8.997 55.465,-18.247 0,0 22.8690001,-5.532 24.3690001,-16.282 0,0 0.199,-1.395 1.06400002,-1.842 2.46399998,-1.275 5.43999998,-7.185 7.31599998,-12.625 0,0 2.5,-3.25 1.75,4.75 0,0 5.2499999,3.25 -0.5,5.5 0,0 -0.25,17.25 -21.2500001,28.25 0,0 -27,15.25 -64.25,24 0,0 -6.25,3 -8.25,8.25 0,0 -3.75,12.5 -9.5,10.75 0,0 -5.500002,0.75 -7.750002,-14 0,0 -1.5,-5 -6.75,-2.75 0,0 -13.25,16.25 -14.75,-2.75 0,0 -0.25,-2.25 3.75,-15 0,0 3.694,-18.148 -16.75,-10.75 0,0 -15,7 -20.25,5.75 0,0 -6,0 -13,-13.75 0,0 -0.75,-8.5 -15.25,-26.25 0,0 -2.75,2.5 1.25,6.5 0,0 1.75,6.5 -3.5,1 0,0 -1.75,2 5.25,8 0,0 6.5,7.25 7.5,19.25 0,0 3,17.75 18.25,21 0,0 10.5,1.75 16.25,-0.25 0,0 6,-1.5 10,10 0,0 5.5,29 19,38 0,0 12.750002,13 13.500002,-1.25 0,0 -0.5,-11.25 8,-7.75 0,0 7.75,3.75 13.25,9.75 0,0 6.072,7.884 19.667,3.75 0,0 20.833,-5.5 20.666,30 2.5,7.667 3.883,12.108 4.917,27.75 0,0 -0.452,5.716 7.298,7.216 0,0 8.314,2.511 15.4270001,7.27 5.643,3.775 14.538,0.575 15.275,9.265 0,0 0.75,9 10.2499999,13.5 0,0 3.5,4.25 7.5,4.5 0,0 7.5,1 1.25,4.75 0,0 -1.5,8.5 -5.75,0.5 0,0 -9,-8.75 -28.7499999,-16.75 0,0 -34.2500001,-9 -47.7500001,-40.25 0,0 -12.5,-27.5 -33.25,-27.5 0,0 -0.694,-0.092 -1.725,0.35 -4.796,2.055 -21.956002,7.77 -46.775002,8.4 0,0 -19.75,1.75 -23.75,16 0,0 -0.304,10.321 -3.65,17.022 -0.398,0.798 -0.658,1.371 -0.768,3.522 l 0.669,26.538 c 0,0 -1.001,25.667 -5.001,41.417 0,0 -3.75,7 -9.5,7.25 0,0 -8.5,0 -2.25,3.75 0,0 2.5,1.75 10,-1.75 0,0 2.75,-0.25 4.25,3.75 0,0 6,5.75 6.5,-1.75 0,0 -2.25,-8.5 0.75,-13.25 0,0 10.334,-21.417 11.334,-49.417 0,0 -2.084,-25.583 8.916,-27.083 0,0 45.500002,-3.5 68.750002,-18")
#hmface = parse_path("m 531.431,209.833 c 0,0 15.499,14.5 36.333,0.333 0,0 -3.167,-5.834 -14,-8.167 0,0 4,1.5 3.5,6 0,0 -1.667,7 -8.5,5.333 0,0 -6.667,0.333 -7.5,-5.833 0,0 0.5,-7.333 7.5,-6.333 0,0 -7.833,-0.834 -14.833,3.833 0,0 -8.999,2.667 -9.833,0.667 0,0 5.166,-0.334 12.333,-8.167 0,0 6.5,-7.667 16,-4.167 0,0 -7.167,0.833 0.333,2.667 0,0 9.334,2.667 15.334,9.833 0,0 2,4 3.5,0 l 4.833,-9.167 c 0,0 1.166,-6 -3.167,-11 0,0 -14.834,-12.834 -30,-10.667 0,0 -15.332,0 -24.666,18.833 0,0 -4.333,10.667 -20.5,1.667 0,0 7.833,7.667 3.833,20.333 0,0 0.167,33.167 13.167,41.833 0,0 13,10.5 28.5,9.167 0,0 12,0.333 23,-11.167 0,0 7.334,-4.834 8.5,-3.667 0,0 -5.333,3.667 0.5,6.667 0,0 6.166,2.667 11.666,0.167 0,0 9.001,-1.5 9.334,4.167 0,0 5.666,2.334 9.666,-1.833 0,0 13.333,-5.5 7.5,-18.5 0,0 -18,-32 -18.5,-33.667 0,0 -1.5,-7.166 3.167,-10.333 0,0 6.167,-6.833 19.167,-7.833 0,0 8.832,1 5.166,5.5 0,0 -4.166,8.167 -2.333,12.5 0,0 -8.5,-12.333 -22.5,1.5 0,0 6.666,-4.667 6.833,-3.333 0,0 -1.166,3.167 -0.833,5 0,0 1.333,6 6.833,5.5 0,0 6.667,-0.333 6.667,-4.833 0,0 0.167,-6 -1.833,-6.167 0,0 6.333,3.167 4.833,7 0,0 -1.834,11.667 -19.667,1.5 0,0 2.334,5.5 14.667,6 0,0 4.001,0 4.667,-0.5 0,0 10,10.834 11,26.167 0,0 -1.668,14.666 -10.334,23.333 0,0 -5.333,14.833 -4.666,18.5 l -56.167,-4 c 6.098,2.089 13.264,-1.024 17.833,1 26.334,11.667 37.334,-5.5 37.334,-5.5 -3.75,-5.5 -12.25,-3.25 -12.25,-3.25 -3,2.75 -8.75,-0.25 -8.75,-0.25 -6.5,-4.5 -16,0 -16,0 -10.75,4.25 -30.25,8 -30.25,8 6.25,-0.25 11.5,5 11.5,5 8.5,10.5 20,11.5 20,11.5 33.25,3.25 28.75,-12.5 28.75,-12.5 2.84,1.852 2.833,10.667 -4.834,21.834 -5.223,7.607 -3.666,14.666 -3.666,14.666 1.25,16.25 -20.75,16.5 -20.75,16.5 -18.083,-0.167 -67.5,-13.75 -67.5,-13.75 -31.5,-7.25 -43.25,-42.25 -43.25,-42.25 -2.75,58.5 32,72.75 32,72.75 22,11.25 25.25,37.25 25.25,37.25 0.5,14.75 -7.25,24.75 -7.25,24.75 1,20 17.5,10 17.5,10 6.75,-3.25 19,-0.5 19,-0.5 25,2.5 23.5,38.25 23.5,38.25 -0.5,12 2.5,24.25 2.5,24.25 13.75,46 59.5,28.25 59.5,28.25 -7.75,2 -16.75,5 -16.75,5 -43.5,10.25 -51.75,-40.5 -51.75,-40.5 -6.5,-39.5 -19.5,-42.75 -19.5,-42.75 -5.25,-4.75 -33.75,3.25 -33.75,3.25 -19.75,0.5 -14.25,-24.75 -14.25,-24.75 12.5,-24.75 -12.5,-49.75 -12.5,-49.75 -31.75,-15.75 -32.75,-35.25 -32.75,-35.25 -10.5,-24.75 0,-48 0,-48 4.75,-13.25 -3.25,-12.25 -3.25,-12.25 -6,0.75 -11.25,-4 -11.25,-4 -46.75,-44.75 -24.25,-64.5 -24.25,-64.5 12,-13.25 31,7.5 31,7.5 5.641,8.822 2.5,-2 2.5,-2 -0.829,-6.775 -14.5,-15.25 -14.5,-15.25 -33.5,-29 13.5,-87.5 13.5,-87.5 30.75,-45.5 88.25,-14.5 88.25,-14.5 4.25,3.5 4.75,1 4.75,1 -10.75,-12.75 15,1 15,1 41.5,-20.5 88,81.25 88,81.25 14.75,24.5 -4.25,41.5 -4.25,41.5 -15.25,21 -5,37 -5,37 10,7.5 14,-1.5 14,-1.5 2.25,-3 0.25,-3 0.25,-3 -3.25,-0.5 -7.75,7 -7.75,7 -0.75,0.75 -1,5.75 -1,5.75 0,6 3.25,6.25 3.25,6.25 3.75,-0.5 10.5,1.25 10.5,1.25 14.5,9 4.5,11.75 4.5,11.75 -5.5,-1.25 -0.25,-10.25 -0.25,-10.25 -0.75,-7.25 -11.5,-5.75 -11.5,-5.75 -5.5,-0.75 -1.5,-5.5 -1.5,-5.5 3,0 7.75,-8 7.75,-8 3.5,-9.25 -5.75,-5.25 -5.75,-5.25 -5,5 -7.75,3.25 -7.75,3.25 -9.25,-2.75 3.75,-19.75 3.75,-19.75 -2.75,2.5 -11,1.75 -11,1.75 -8.5,1 -10.75,-15.75 -10.75,-15.75 l -0.25,-14.25 c -1.75,-7 5.75,-14 5.75,-14 -13,-67 -44,-75.5 -44,-75.5 -11,-6.5 -6.75,10.75 -6.75,10.75 2,19.25 -37,12 -37,12 -25.25,0.25 -31.5,36.75 -31.5,36.75 -2,15.25 -14.875,15 -14.875,15 -14,1.5 -13.875,-4.875 -13.875,-4.875 1,-2 5.5,5 5.5,5 4.625,15 -12.875,30.875 -12.875,30.875 -12.5,16.5 -12,29.5 -12,29.5 -0.5,30.25 23.625,33.625 23.625,33.625 15.875,0.25 16,-23.375 16,-23.375 -1.25,-16.25 -6.5,-11.5 -6.5,-11.5 -4,6.5 6.25,7.125 6.25,7.125 4.875,0.25 13.875,9.75 13.875,9.75")
print "Exist ", len(path_strings)," path(s) in the SVG file"
camel = parse_path(path_strings[0]) # Select the path to extract
svdpath = camel
print "Done"
data = []
numpoint = 600
xx = []
yy = []
totaltime = 5
for i in range(numpoint):
	t = i/(numpoint+1e-10)
	x = 0.5
	y = (svdpath.point(t).real-400)/1000.
	z = (800-svdpath.point(t).imag)/1000.
	xx.append(y)
	yy.append(z)
	data.append([1/(numpoint+1e-10)*totaltime,x,y,z])

for d in data:
	print d
plt.scatter(xx,yy)
plt.show()
